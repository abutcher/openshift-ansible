---
- include: evaluate_groups.yml

- include: initialize_openshift_version.yml

- name: Load openshift_facts
  hosts: oo_etcd_to_config:oo_masters_to_config:oo_nodes_to_config
  roles:
  - openshift_facts

- name: Redeploy etcd certificates
  hosts: oo_etcd_to_config
  any_errors_fatal: true
  vars:
    etcd_ca_host: "{{ groups.oo_etcd_to_config.0 }}"
    etcd_conf_dir: /etc/etcd
    etcd_generated_certs_dir: "{{ etcd_conf_dir }}/generated_certs"
  pre_tasks:
  - name: Backup etcd certificates
    command: >
      tar -czf /etc/etcd/etcd-certificate-backup-{{ ansible_date_time.epoch }}.tgz
      {{ etcd_conf_dir }}/ca.crt
      {{ etcd_conf_dir }}/ca
      {{ etcd_generated_certs_dir }}
    delegate_to: "{{ etcd_ca_host }}"
    run_once: true
  - name: Remove existing etcd certificates
    file:
      path: "{{ item }}"
      state: absent
    with_items:
    - "{{ etcd_conf_dir }}/ca.crt"
    - "{{ etcd_conf_dir }}/ca"
    - "{{ etcd_generated_certs_dir }}"
  roles:
  - role: openshift_etcd_server_certificates
    etcd_peers: "{{ groups.oo_etcd_to_config | default([], true) }}"
    etcd_certificates_etcd_hosts: "{{ groups.oo_etcd_to_config | default([], true) }}"
    etcd_certificates_redeploy: true

- name: Redeploy master certificates
  hosts: oo_masters_to_config
  any_errors_fatal: true
  vars:
    openshift_ca_host: "{{ groups.oo_first_master.0 }}"
  pre_tasks:
  - name: Backup generated certificate and config directories
    command: >
      tar -czf /etc/origin/master-node-cert-config-backup-{{ ansible_date_time.epoch }}.tgz
      {{ openshift_generated_configs_dir }}
      {{ openshift.common.config_base }}/master
    delegate_to: "{{ openshift_ca_host }}"
    run_once: true
  - name: Remove generated certificate directories
    file:
      path: "{{ item }}"
      state: absent
    with_items:
    - "{{ openshift_generated_configs_dir }}"
    - "{{ openshift.common.config_base }}/master/ca.crt"
  roles:
  - role: openshift_master_certificates
    openshift_master_etcd_hosts: "{{ hostvars
                                     | oo_select_keys(groups['oo_etcd_to_config'] | default([]))
                                     | oo_collect('openshift.common.hostname')
                                     | default(none, true) }}"
    openshift_master_hostnames: "{{ hostvars
                                    | oo_select_keys(groups['oo_masters_to_config'] | default([]))
                                    | oo_collect('openshift.common.all_hostnames')
                                    | oo_flatten | unique }}"
    openshift_certificates_redeploy: true
    etcd_certificates_redeploy: true
    etcd_ca_host: "{{ groups.oo_etcd_to_config.0 }}"
    etcd_cert_subdir: "openshift-master-{{ openshift.common.hostname }}"
    etcd_cert_config_dir: "{{ openshift.common.config_base }}/master"
    etcd_cert_prefix: "master.etcd-"

- name: Redeploy node certificates
  hosts: oo_nodes_to_config
  any_errors_fatal: true
  pre_tasks:
  - name: Remove CA certificate
    file:
      path: "{{ item }}"
      state: absent
    with_items:
    - "{{ openshift.common.config_base }}/node/ca.crt"
  roles:
  - role: openshift_node_certificates
    openshift_node_master_api_url: "{{ hostvars[groups.oo_first_master.0].openshift.master.api_url }}"
    openshift_ca_host: "{{ groups.oo_first_master.0 }}"
    openshift_certificates_redeploy: true

- name: Restart etcd
  hosts: oo_etcd_to_config
  tasks:
  - name: restart etcd
    service: name=etcd state=restarted

- name: Stop master services
  hosts: oo_masters_to_config
  vars:
    openshift_master_ha: "{{ groups.oo_masters_to_config | length > 1 }}"
  tasks:
  - name: stop master
    service: name={{ openshift.common.service_type }}-master state=stopped
    when: not openshift_master_ha | bool
  - name: stop master api
    service: name={{ openshift.common.service_type }}-master-api state=stopped
    when: openshift_master_ha | bool and openshift_master_cluster_method == 'native'
  - name: stop master controllers
    service: name={{ openshift.common.service_type }}-master-controllers state=stopped
    when: openshift_master_ha | bool and openshift_master_cluster_method == 'native'

- name: Start master services
  hosts: oo_masters_to_config
  serial: 1
  vars:
    openshift_master_ha: "{{ groups.oo_masters_to_config | length > 1 }}"
  tasks:
  - name: start master
    service: name={{ openshift.common.service_type }}-master state=started
    when: not openshift_master_ha | bool
  - name: start master api
    service: name={{ openshift.common.service_type }}-master-api state=started
    when: openshift_master_ha | bool and openshift_master_cluster_method == 'native'
  - name: start master controllers
    service: name={{ openshift.common.service_type }}-master-controllers state=started
    when: openshift_master_ha | bool and openshift_master_cluster_method == 'native'

- name: Restart masters (pacemaker)
  hosts: oo_first_master
  vars:
    openshift_master_ha: "{{ groups.oo_masters_to_config | length > 1 }}"
  tasks:
  - name: restart master
    command: pcs resource restart master
    when: openshift_master_ha | bool and openshift_master_cluster_method == 'pacemaker'

- name: Restart nodes
  hosts: oo_nodes_to_config
  tasks:
  - name: restart node
    service: name={{ openshift.common.service_type }}-node state=restarted
